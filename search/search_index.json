{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Obsidian Notes \u00b6 Publish your public notes with MkDocs Hello World! \u00b6 The index.md in the /docs folder is the homepage you see here. The folders in /docs appear as the main sections on the navigation bar. The notes appear as pages within these sections. For example, Note 1 in Topic 1 mkdocs-charts-plugin \u00b6 MkDocs plugin to create plots from data using the declarative vegalite syntax. This makes it easier to build reproducible reports. Includes supports for mkdocs-material theme features like instant loading and dark color themes . Installation \u00b6 Install the plugin using pip3 : pip3 install mkdocs-charts-plugin Next, add the following lines to your mkdocs.yml : plugins: - search - charts extra_javascript: - https://cdn.jsdelivr.net/npm/vega@5 - https://cdn.jsdelivr.net/npm/vega-lite@5 - https://cdn.jsdelivr.net/npm/vega-embed@6 markdown_extensions: - pymdownx.superfences: custom_fences: - name: vegalite class: vegalite format: !!python/name:mkdocs_charts_plugin.fences.fence_vegalite If you have no plugins entry in your config file yet, you'll likely also want to add the search plugin. MkDocs enables it by default if there is no plugins entry set.","title":"Home"},{"location":"#obsidian-notes","text":"Publish your public notes with MkDocs","title":"Obsidian Notes"},{"location":"#hello-world","text":"The index.md in the /docs folder is the homepage you see here. The folders in /docs appear as the main sections on the navigation bar. The notes appear as pages within these sections. For example, Note 1 in Topic 1","title":"Hello World!"},{"location":"#mkdocs-charts-plugin","text":"MkDocs plugin to create plots from data using the declarative vegalite syntax. This makes it easier to build reproducible reports. Includes supports for mkdocs-material theme features like instant loading and dark color themes .","title":"mkdocs-charts-plugin"},{"location":"#installation","text":"Install the plugin using pip3 : pip3 install mkdocs-charts-plugin Next, add the following lines to your mkdocs.yml : plugins: - search - charts extra_javascript: - https://cdn.jsdelivr.net/npm/vega@5 - https://cdn.jsdelivr.net/npm/vega-lite@5 - https://cdn.jsdelivr.net/npm/vega-embed@6 markdown_extensions: - pymdownx.superfences: custom_fences: - name: vegalite class: vegalite format: !!python/name:mkdocs_charts_plugin.fences.fence_vegalite If you have no plugins entry in your config file yet, you'll likely also want to add the search plugin. MkDocs enables it by default if there is no plugins entry set.","title":"Installation"},{"location":"contributing/","text":"--8<-- \"CONTRIBUTING.md\"","title":"Contributing"},{"location":"demo/","text":"Demo \u00b6 Here are some examples taken from the vega-lite examples page: { \"schema-url\": \"assets/charts/simple_bar_chart.json\" } { \"schema-url\": \"assets/charts/lines.json\" } { \"schema-url\": \"assets/charts/double_stacked.json\" } { \"schema-url\": \"assets/charts/energy_boom.json\" } { \"schema-url\": \"assets/charts/repeat_histogram.json\" } { \"schema-url\": \"assets/charts/geo_choropleth.json\" }","title":"Demo"},{"location":"demo/#demo","text":"Here are some examples taken from the vega-lite examples page: { \"schema-url\": \"assets/charts/simple_bar_chart.json\" } { \"schema-url\": \"assets/charts/lines.json\" } { \"schema-url\": \"assets/charts/double_stacked.json\" } { \"schema-url\": \"assets/charts/energy_boom.json\" } { \"schema-url\": \"assets/charts/repeat_histogram.json\" } { \"schema-url\": \"assets/charts/geo_choropleth.json\" }","title":"Demo"},{"location":"options/","text":"Options \u00b6 vega_width (default is container ). When not specified explicitly in the JSON schema, the width to use (see vegalite customizing size ). When set to container width will be 100%. vega_theme (default is default ). Specify one of the available vegalite themes . vega_theme_dark (default is dark ). When using the mkdocs-material theme with a dark mode, automatically render charts using this theme. Dark mode toggle is also supported. Specify one of the available vegalite themes . vega_renderer (default is svg ). Specify one of the available vegalite renderers . use_data_path (default is True ). When True , any relative urls used in the JSON schema are relative to the data_path . When False , relative urls should be relative to the URL of the page. data_path (default is \"\" ). When use_data_path is enabled, the base path relative to the docs/ folder.","title":"Options"},{"location":"options/#options","text":"vega_width (default is container ). When not specified explicitly in the JSON schema, the width to use (see vegalite customizing size ). When set to container width will be 100%. vega_theme (default is default ). Specify one of the available vegalite themes . vega_theme_dark (default is dark ). When using the mkdocs-material theme with a dark mode, automatically render charts using this theme. Dark mode toggle is also supported. Specify one of the available vegalite themes . vega_renderer (default is svg ). Specify one of the available vegalite renderers . use_data_path (default is True ). When True , any relative urls used in the JSON schema are relative to the data_path . When False , relative urls should be relative to the URL of the page. data_path (default is \"\" ). When use_data_path is enabled, the base path relative to the docs/ folder.","title":"Options"},{"location":"usage/","text":"Usage \u00b6 !!! quote \"What is vegalite?\" Vega-Lite is a high-level grammar of interactive graphics. It provides a concise, declarative JSON syntax to create an expressive range of visualizations for data analysis and presentation. [source](https://vega.github.io/vega-lite/) mkdocs-charts-plugin makes it easy to insert any valid vega-lite specification into your markdown pages. For example: ```vegalite { \"description\": \"A simple bar chart with embedded data.\", \"data\": { \"values\": [ {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43}, {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53}, {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52} ] }, \"mark\": {\"type\": \"bar\", \"tooltip\": true}, \"encoding\": { \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}}, \"y\": {\"field\": \"b\", \"type\": \"quantitative\"} } } ``` will render as: { \"description\": \"A simple bar chart with embedded data.\", \"data\": { \"values\": [ {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43}, {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53}, {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52} ] }, \"mark\": {\"type\": \"bar\", \"tooltip\": true}, \"encoding\": { \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}}, \"y\": {\"field\": \"b\", \"type\": \"quantitative\"} } } For more examples, see the demo page. How to specify URLs \u00b6 mkdocs-charts-plugin becomes really powerful when used with datasets. You could re-write the example above by referring to a data file: ```vegali te { \"description\" : \"A simple bar chart with embedded data.\" , \"data\" : { \"url\" : \"assets/charts/data/basic_bar_chart.json\" }, \"mark\" : { \"type\" : \"bar\" , \"tooltip\" : true }, \"encoding\" : { \"x\" : { \"field\" : \"a\" , \"type\" : \"nominal\" , \"axis\" : { \"labelAngle\" : 0 }}, \"y\" : { \"field\" : \"b\" , \"type\" : \"quantitative\" } } } ``` Note that the URL is relative to the docs/ folder, which means you can re-order the hierarchy of markdown pages without breaking charts. If you prefer specifying URLs relative to the location of the markdown page, set use_data_path to False (see plugin options ). Note you could also use an absolute URL to a dataset somewhere on the web or a public git repository, for example https://raw.githubusercontent.com/timvink/mkdocs-charts-plugin/main/docs/assets/charts/data/basic_bar_chart.json . Specifying schema-URLs \u00b6 To avoid long, distracting chart schemas in your markdown files you can choose to save a chart schema separately in a .json file and point to it using a schema-url : ```vegalite { \"schema-url\": \"assets/charts/chart_basic_bar_chart.json\" } ``` Altair \u00b6 Altair is a declarative statistical visualization library for Python. Because Altair is built on Vega-Lite , you can save Altair Charts in vega-lite format. For example, the altair gallery has this bar chart with highlighted bar : import altair as alt from vega_datasets import data source = data . wheat () alt . Chart ( source ) . mark_bar () . encode ( x = 'year:O' , y = \"wheat:Q\" , # The highlight will be set on the result of a conditional statement color = alt . condition ( alt . datum . year == 1810 , # If the year is 1810 this test returns True, alt . value ( 'orange' ), # which sets the bar orange. alt . value ( 'steelblue' ) # And if it's not true it sets the bar steelblue. ) ) . properties ( width = 600 ) That chart can be exported using .save(\"chartname.json\") or .to_json() and quickly inserted into a mkdocs project. It will render as: { \"$schema\": \"https://vega.github.io/schema/vega-lite/v4.8.1.json\", \"config\": { \"view\": { \"continuousHeight\": 300, \"continuousWidth\": 400 } }, \"data\": { \"name\": \"data-76d1ce26ea5761007c35827e1564d86c\" }, \"datasets\": { \"data-76d1ce26ea5761007c35827e1564d86c\": [ { \"wages\": 5.0, \"wheat\": 41.0, \"year\": 1565 }, { \"wages\": 5.05, \"wheat\": 45.0, \"year\": 1570 }, { \"wages\": 5.08, \"wheat\": 42.0, \"year\": 1575 }, { \"wages\": 5.12, \"wheat\": 49.0, \"year\": 1580 }, { \"wages\": 5.15, \"wheat\": 41.5, \"year\": 1585 }, { \"wages\": 5.25, \"wheat\": 47.0, \"year\": 1590 }, { \"wages\": 5.54, \"wheat\": 64.0, \"year\": 1595 }, { \"wages\": 5.61, \"wheat\": 27.0, \"year\": 1600 }, { \"wages\": 5.69, \"wheat\": 33.0, \"year\": 1605 }, { \"wages\": 5.78, \"wheat\": 32.0, \"year\": 1610 }, { \"wages\": 5.94, \"wheat\": 33.0, \"year\": 1615 }, { \"wages\": 6.01, \"wheat\": 35.0, \"year\": 1620 }, { \"wages\": 6.12, \"wheat\": 33.0, \"year\": 1625 }, { \"wages\": 6.22, \"wheat\": 45.0, \"year\": 1630 }, { \"wages\": 6.3, \"wheat\": 33.0, \"year\": 1635 }, { \"wages\": 6.37, \"wheat\": 39.0, \"year\": 1640 }, { \"wages\": 6.45, \"wheat\": 53.0, \"year\": 1645 }, { \"wages\": 6.5, \"wheat\": 42.0, \"year\": 1650 }, { \"wages\": 6.6, \"wheat\": 40.5, \"year\": 1655 }, { \"wages\": 6.75, \"wheat\": 46.5, \"year\": 1660 }, { \"wages\": 6.8, \"wheat\": 32.0, \"year\": 1665 }, { \"wages\": 6.9, \"wheat\": 37.0, \"year\": 1670 }, { \"wages\": 7.0, \"wheat\": 43.0, \"year\": 1675 }, { \"wages\": 7.3, \"wheat\": 35.0, \"year\": 1680 }, { \"wages\": 7.6, \"wheat\": 27.0, \"year\": 1685 }, { \"wages\": 8.0, \"wheat\": 40.0, \"year\": 1690 }, { \"wages\": 8.5, \"wheat\": 50.0, \"year\": 1695 }, { \"wages\": 9.0, \"wheat\": 30.0, \"year\": 1700 }, { \"wages\": 10.0, \"wheat\": 32.0, \"year\": 1705 }, { \"wages\": 11.0, \"wheat\": 44.0, \"year\": 1710 }, { \"wages\": 11.75, \"wheat\": 33.0, \"year\": 1715 }, { \"wages\": 12.5, \"wheat\": 29.0, \"year\": 1720 }, { \"wages\": 13.0, \"wheat\": 39.0, \"year\": 1725 }, { \"wages\": 13.3, \"wheat\": 26.0, \"year\": 1730 }, { \"wages\": 13.6, \"wheat\": 32.0, \"year\": 1735 }, { \"wages\": 14.0, \"wheat\": 27.0, \"year\": 1740 }, { \"wages\": 14.5, \"wheat\": 27.5, \"year\": 1745 }, { \"wages\": 15.0, \"wheat\": 31.0, \"year\": 1750 }, { \"wages\": 15.7, \"wheat\": 35.5, \"year\": 1755 }, { \"wages\": 16.5, \"wheat\": 31.0, \"year\": 1760 }, { \"wages\": 17.6, \"wheat\": 43.0, \"year\": 1765 }, { \"wages\": 18.5, \"wheat\": 47.0, \"year\": 1770 }, { \"wages\": 19.5, \"wheat\": 44.0, \"year\": 1775 }, { \"wages\": 21.0, \"wheat\": 46.0, \"year\": 1780 }, { \"wages\": 23.0, \"wheat\": 42.0, \"year\": 1785 }, { \"wages\": 25.5, \"wheat\": 47.5, \"year\": 1790 }, { \"wages\": 27.5, \"wheat\": 76.0, \"year\": 1795 }, { \"wages\": 28.5, \"wheat\": 79.0, \"year\": 1800 }, { \"wages\": 29.5, \"wheat\": 81.0, \"year\": 1805 }, { \"wages\": 30.0, \"wheat\": 99.0, \"year\": 1810 }, { \"wages\": null, \"wheat\": 78.0, \"year\": 1815 }, { \"wages\": null, \"wheat\": 54.0, \"year\": 1820 } ] }, \"encoding\": { \"color\": { \"condition\": { \"test\": \"(datum.year === 1810)\", \"value\": \"orange\" }, \"value\": \"steelblue\" }, \"x\": { \"field\": \"year\", \"type\": \"ordinal\" }, \"y\": { \"field\": \"wheat\", \"type\": \"quantitative\" } }, \"mark\": \"bar\"} The only modification to the output JSON was removing \"width\": 600 to make the chart use the full width of the page container.","title":"Usage"},{"location":"usage/#usage","text":"!!! quote \"What is vegalite?\" Vega-Lite is a high-level grammar of interactive graphics. It provides a concise, declarative JSON syntax to create an expressive range of visualizations for data analysis and presentation. [source](https://vega.github.io/vega-lite/) mkdocs-charts-plugin makes it easy to insert any valid vega-lite specification into your markdown pages. For example: ```vegalite { \"description\": \"A simple bar chart with embedded data.\", \"data\": { \"values\": [ {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43}, {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53}, {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52} ] }, \"mark\": {\"type\": \"bar\", \"tooltip\": true}, \"encoding\": { \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}}, \"y\": {\"field\": \"b\", \"type\": \"quantitative\"} } } ``` will render as: { \"description\": \"A simple bar chart with embedded data.\", \"data\": { \"values\": [ {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43}, {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53}, {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52} ] }, \"mark\": {\"type\": \"bar\", \"tooltip\": true}, \"encoding\": { \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}}, \"y\": {\"field\": \"b\", \"type\": \"quantitative\"} } } For more examples, see the demo page.","title":"Usage"},{"location":"usage/#how-to-specify-urls","text":"mkdocs-charts-plugin becomes really powerful when used with datasets. You could re-write the example above by referring to a data file: ```vegali te { \"description\" : \"A simple bar chart with embedded data.\" , \"data\" : { \"url\" : \"assets/charts/data/basic_bar_chart.json\" }, \"mark\" : { \"type\" : \"bar\" , \"tooltip\" : true }, \"encoding\" : { \"x\" : { \"field\" : \"a\" , \"type\" : \"nominal\" , \"axis\" : { \"labelAngle\" : 0 }}, \"y\" : { \"field\" : \"b\" , \"type\" : \"quantitative\" } } } ``` Note that the URL is relative to the docs/ folder, which means you can re-order the hierarchy of markdown pages without breaking charts. If you prefer specifying URLs relative to the location of the markdown page, set use_data_path to False (see plugin options ). Note you could also use an absolute URL to a dataset somewhere on the web or a public git repository, for example https://raw.githubusercontent.com/timvink/mkdocs-charts-plugin/main/docs/assets/charts/data/basic_bar_chart.json .","title":"How to specify URLs"},{"location":"usage/#specifying-schema-urls","text":"To avoid long, distracting chart schemas in your markdown files you can choose to save a chart schema separately in a .json file and point to it using a schema-url : ```vegalite { \"schema-url\": \"assets/charts/chart_basic_bar_chart.json\" } ```","title":"Specifying schema-URLs"},{"location":"usage/#altair","text":"Altair is a declarative statistical visualization library for Python. Because Altair is built on Vega-Lite , you can save Altair Charts in vega-lite format. For example, the altair gallery has this bar chart with highlighted bar : import altair as alt from vega_datasets import data source = data . wheat () alt . Chart ( source ) . mark_bar () . encode ( x = 'year:O' , y = \"wheat:Q\" , # The highlight will be set on the result of a conditional statement color = alt . condition ( alt . datum . year == 1810 , # If the year is 1810 this test returns True, alt . value ( 'orange' ), # which sets the bar orange. alt . value ( 'steelblue' ) # And if it's not true it sets the bar steelblue. ) ) . properties ( width = 600 ) That chart can be exported using .save(\"chartname.json\") or .to_json() and quickly inserted into a mkdocs project. It will render as: { \"$schema\": \"https://vega.github.io/schema/vega-lite/v4.8.1.json\", \"config\": { \"view\": { \"continuousHeight\": 300, \"continuousWidth\": 400 } }, \"data\": { \"name\": \"data-76d1ce26ea5761007c35827e1564d86c\" }, \"datasets\": { \"data-76d1ce26ea5761007c35827e1564d86c\": [ { \"wages\": 5.0, \"wheat\": 41.0, \"year\": 1565 }, { \"wages\": 5.05, \"wheat\": 45.0, \"year\": 1570 }, { \"wages\": 5.08, \"wheat\": 42.0, \"year\": 1575 }, { \"wages\": 5.12, \"wheat\": 49.0, \"year\": 1580 }, { \"wages\": 5.15, \"wheat\": 41.5, \"year\": 1585 }, { \"wages\": 5.25, \"wheat\": 47.0, \"year\": 1590 }, { \"wages\": 5.54, \"wheat\": 64.0, \"year\": 1595 }, { \"wages\": 5.61, \"wheat\": 27.0, \"year\": 1600 }, { \"wages\": 5.69, \"wheat\": 33.0, \"year\": 1605 }, { \"wages\": 5.78, \"wheat\": 32.0, \"year\": 1610 }, { \"wages\": 5.94, \"wheat\": 33.0, \"year\": 1615 }, { \"wages\": 6.01, \"wheat\": 35.0, \"year\": 1620 }, { \"wages\": 6.12, \"wheat\": 33.0, \"year\": 1625 }, { \"wages\": 6.22, \"wheat\": 45.0, \"year\": 1630 }, { \"wages\": 6.3, \"wheat\": 33.0, \"year\": 1635 }, { \"wages\": 6.37, \"wheat\": 39.0, \"year\": 1640 }, { \"wages\": 6.45, \"wheat\": 53.0, \"year\": 1645 }, { \"wages\": 6.5, \"wheat\": 42.0, \"year\": 1650 }, { \"wages\": 6.6, \"wheat\": 40.5, \"year\": 1655 }, { \"wages\": 6.75, \"wheat\": 46.5, \"year\": 1660 }, { \"wages\": 6.8, \"wheat\": 32.0, \"year\": 1665 }, { \"wages\": 6.9, \"wheat\": 37.0, \"year\": 1670 }, { \"wages\": 7.0, \"wheat\": 43.0, \"year\": 1675 }, { \"wages\": 7.3, \"wheat\": 35.0, \"year\": 1680 }, { \"wages\": 7.6, \"wheat\": 27.0, \"year\": 1685 }, { \"wages\": 8.0, \"wheat\": 40.0, \"year\": 1690 }, { \"wages\": 8.5, \"wheat\": 50.0, \"year\": 1695 }, { \"wages\": 9.0, \"wheat\": 30.0, \"year\": 1700 }, { \"wages\": 10.0, \"wheat\": 32.0, \"year\": 1705 }, { \"wages\": 11.0, \"wheat\": 44.0, \"year\": 1710 }, { \"wages\": 11.75, \"wheat\": 33.0, \"year\": 1715 }, { \"wages\": 12.5, \"wheat\": 29.0, \"year\": 1720 }, { \"wages\": 13.0, \"wheat\": 39.0, \"year\": 1725 }, { \"wages\": 13.3, \"wheat\": 26.0, \"year\": 1730 }, { \"wages\": 13.6, \"wheat\": 32.0, \"year\": 1735 }, { \"wages\": 14.0, \"wheat\": 27.0, \"year\": 1740 }, { \"wages\": 14.5, \"wheat\": 27.5, \"year\": 1745 }, { \"wages\": 15.0, \"wheat\": 31.0, \"year\": 1750 }, { \"wages\": 15.7, \"wheat\": 35.5, \"year\": 1755 }, { \"wages\": 16.5, \"wheat\": 31.0, \"year\": 1760 }, { \"wages\": 17.6, \"wheat\": 43.0, \"year\": 1765 }, { \"wages\": 18.5, \"wheat\": 47.0, \"year\": 1770 }, { \"wages\": 19.5, \"wheat\": 44.0, \"year\": 1775 }, { \"wages\": 21.0, \"wheat\": 46.0, \"year\": 1780 }, { \"wages\": 23.0, \"wheat\": 42.0, \"year\": 1785 }, { \"wages\": 25.5, \"wheat\": 47.5, \"year\": 1790 }, { \"wages\": 27.5, \"wheat\": 76.0, \"year\": 1795 }, { \"wages\": 28.5, \"wheat\": 79.0, \"year\": 1800 }, { \"wages\": 29.5, \"wheat\": 81.0, \"year\": 1805 }, { \"wages\": 30.0, \"wheat\": 99.0, \"year\": 1810 }, { \"wages\": null, \"wheat\": 78.0, \"year\": 1815 }, { \"wages\": null, \"wheat\": 54.0, \"year\": 1820 } ] }, \"encoding\": { \"color\": { \"condition\": { \"test\": \"(datum.year === 1810)\", \"value\": \"orange\" }, \"value\": \"steelblue\" }, \"x\": { \"field\": \"year\", \"type\": \"ordinal\" }, \"y\": { \"field\": \"wheat\", \"type\": \"quantitative\" } }, \"mark\": \"bar\"} The only modification to the output JSON was removing \"width\": 600 to make the chart use the full width of the page container.","title":"Altair"},{"location":"01-HowTo/Installing%20Hugo/","text":"Installing Hugo \u00b6 ref.: https://cloudcannon.com/community/learn/hugo-tutorial/ Get Hugo set up and installed for the rest of the lessons. Hugo is one of the simplest static site generators to install, because it\u2019s distributed as a single binary. This means that everything is included in one package, and you don\u2019t have to manage anything. Even though Hugo is built in Go, you don\u2019t need that installed! There are two versions of Hugo: **standard** and **extended**. If you are a user of SCSS/SASS, the **extended** version is recommended, as this gives you built-in processing capabilities. How to install Hugo \u00b6 Hugo can be installed in multiple ways, but a package manager is recommended - either Homebrew for Mac/Linux or Chocolatey for Windows. Check Hugo\u2019s installation page for more options, such as cloning directly from GitHub. Mac/Linux (Homebrew): brew install hugo Windows (Chocolatey): choco install hugo-extended -confirm Final installation check \u00b6 To check that the Hugo installation has worked properly, run the following command: hugo version","title":"Installing Hugo"},{"location":"01-HowTo/Installing%20Hugo/#installing-hugo","text":"ref.: https://cloudcannon.com/community/learn/hugo-tutorial/ Get Hugo set up and installed for the rest of the lessons. Hugo is one of the simplest static site generators to install, because it\u2019s distributed as a single binary. This means that everything is included in one package, and you don\u2019t have to manage anything. Even though Hugo is built in Go, you don\u2019t need that installed! There are two versions of Hugo: **standard** and **extended**. If you are a user of SCSS/SASS, the **extended** version is recommended, as this gives you built-in processing capabilities.","title":"Installing Hugo"},{"location":"01-HowTo/Installing%20Hugo/#how-to-install-hugo","text":"Hugo can be installed in multiple ways, but a package manager is recommended - either Homebrew for Mac/Linux or Chocolatey for Windows. Check Hugo\u2019s installation page for more options, such as cloning directly from GitHub. Mac/Linux (Homebrew): brew install hugo Windows (Chocolatey): choco install hugo-extended -confirm","title":"How to install Hugo"},{"location":"01-HowTo/Installing%20Hugo/#final-installation-check","text":"To check that the Hugo installation has worked properly, run the following command: hugo version","title":"Final installation check"},{"location":"01-HowTo/Installing%20Jekyll/","text":"Installing Jekyll \u00b6 ref.: https://cloudcannon.com/community/learn/jekyll-tutorial/ Install Jekyll - a simple, blog aware static site generator Ruby Gem. Jekyll is a Ruby Gem that can be installed on most systems. It\u2019s a straightforward process on both Mac and Linux, and only slightly more involved on Windows. Either way, it won\u2019t take you long to get set up with Jekyll! How to install Jekyll \u00b6 Jekyll is a Ruby Gem, which means you will need to install a couple of dependencies to allow the Gem to run on your system. You will need: \u00b6 Ruby version 2.4.0 or higher, including all development headers (check by running the command ruby -v ) RubyGems (check by running the command gem -v ) GCC (check by running the command gcc -v , g++ -v ) Make (check by running the command make -v ) For a step-by-step walkthrough to help you install these, head to the [Jekyll installation guides](https://jekyllrb.com/docs/installation/) and follow the instructions for your system. Install Jekyll \u00b6 Once you have done that you are ready to install the Jekyll gem. Go to your command line interface and run: gem install jekyll bundler Final installation check \u00b6 To check that the Jekyll installation has worked properly, run the following command: jekyll -v","title":"Installing Jekyll"},{"location":"01-HowTo/Installing%20Jekyll/#installing-jekyll","text":"ref.: https://cloudcannon.com/community/learn/jekyll-tutorial/ Install Jekyll - a simple, blog aware static site generator Ruby Gem. Jekyll is a Ruby Gem that can be installed on most systems. It\u2019s a straightforward process on both Mac and Linux, and only slightly more involved on Windows. Either way, it won\u2019t take you long to get set up with Jekyll!","title":"Installing Jekyll"},{"location":"01-HowTo/Installing%20Jekyll/#how-to-install-jekyll","text":"Jekyll is a Ruby Gem, which means you will need to install a couple of dependencies to allow the Gem to run on your system.","title":"How to install Jekyll"},{"location":"01-HowTo/Installing%20Jekyll/#you-will-need","text":"Ruby version 2.4.0 or higher, including all development headers (check by running the command ruby -v ) RubyGems (check by running the command gem -v ) GCC (check by running the command gcc -v , g++ -v ) Make (check by running the command make -v ) For a step-by-step walkthrough to help you install these, head to the [Jekyll installation guides](https://jekyllrb.com/docs/installation/) and follow the instructions for your system.","title":"You will need:"},{"location":"01-HowTo/Installing%20Jekyll/#install-jekyll","text":"Once you have done that you are ready to install the Jekyll gem. Go to your command line interface and run: gem install jekyll bundler","title":"Install Jekyll"},{"location":"01-HowTo/Installing%20Jekyll/#final-installation-check","text":"To check that the Jekyll installation has worked properly, run the following command: jekyll -v","title":"Final installation check"},{"location":"01-HowTo/Jekyll%20Garden/","text":"Jekyll Garden.github.io \u00b6 A Digital Garden Theme for Jekyll. Jekyll Garden lets you create a static HTML version of your markdown notes and publish via Github pages. Made for Obsidian users! Jekyll Garden \u00b6 Jekyll Garden is a markdown friendly theme lets you publish your Obsidian vault (or a subset of it) as a Jekyll static website. \u00b6 Check out the demo , features and how to . Install and Setup \u00b6 Jekyll garden is a theme over Jekyll that supports Obsidian formats, and few feautures. To install Jekyll to your server or local host, refer these documents . Docker file is also available. Alternatively, you can use Github and Github Pages as your server. It's very simple and almost low-code. Here is how to do it. Step 1 : Sign-In to Github, visit the theme page and click on 'Use this Template' Step 2 : Name the forked repo as yourusername.github.io . My Github username is hfactor, hence it's hfactor.github.io Step 3 : Go to your repo's settings > pages and set the source to your main branch. Step 4 (Optional) : If you have a custom domain, set CNAME . Configuring Your Jekyll. \u00b6 Now you have Jekyll setup ready, go to _config.yml and set your configurations. Here you can do the following configurations : URL to set your hostname BASEURL to set your sub path (url/subpath/) Website Heading, Content, Copyright Year + Message Private Link - On hover message What all folders to exclude (Obsidian Template and all) Edit these value via Github, and commit directly to Github, which will refresh the whole setup, and a Jekyll enivorment will be ready. You can visit the page by visiting yourusername.github.io Syncing Github with Obsidian \u00b6 Now you have your online publishing setup ready. It's time to build your local knowledge management using Obsidian. Here are the steps : Step 1: Go to github and clone your repository to your machine. For this, you can use git-commands or install Github for desktop. Step 2: Once you have successfully cloned the repository to your machine, Open the Obsidian app in your machine, and set the folder _notes inside the repository as your vault. This is important, because Jekyll Garden can only fetch and publish notes from _notes folder. Frontmatter \u00b6 For all notes to work properly, we need to have three frontmatter values. Please make sure the front matter is written in between three lines. If you check any .md files in this repo, you will see something this. --- title: Credits feed: hide date: 11-05-2022 permalink: /credits format: list --- Title is the page title. It should be same as that of your Obsidian file title for our Wiki links to work. i.e, if file is credits.md title has to be credits If you want to show the note on the feed, you should set Feed as show . It's an optional value, and the default value is set to hide. (To avoid publishing by mistake) date is used to sort note in feed. permalink is an optional value. Use it to set permanent URLs format:list will change the layout to a list with border, Refer Credits . This is useful for Curated lists (Check my personal library ) or while building MoC. Updating Digital Garden \u00b6 Once you have enough notes, got to the Github Desktop app, commit the changes to main, and push the changes to Github. Github will update the pages! If you want to know my workflow or Obsidian folder structure, check here Features \u00b6 Check Features to know theme features Credits \u00b6 Check Credits Jekyll Garden Features \u00b6 Wiki links are auto-converted to Hyperlinks \u00b6 The theme will automatically convert wiki links to inline links. Similarly, [text](url) will be converted to external links. Markdown support \u00b6 The theme supports all standard markdowns. Have a look at Markdown Rendered to see preview. External Links are indicated \u00b6 With link icon next to external links, it's easier to identify internal links and external links Easy Front-Matter \u00b6 Using frontmatter, it's easy to configure notes. The capability includes - feed order baed on date, option to hide notes from feed, list layout and more. Introducing List layout for Notes \u00b6 With simple front matter configuration, you can build a list layout (Check Credits for demo). This is helpful for building manual MoC :) Static Homepage \u00b6 Want to have a seperate home page instead of the feed? (Like my personal website ) - You can configure that at _config.yml by change homepage enabled to true. Support Subpath \u00b6 You can install Jekyll garden to a URL path, or a sub path (example.com/digitalgarden). To do that, just configure baseurl at _config.yml Private files using .gitignore \u00b6 Not a theme feature, but if you want to publish part of your obsidian, it's easy. Just create two folders inside _notes (Say Public and Private), and use Gitignore to stop syncing your pirvate files with Github!","title":"Jekyll Garden.github.io"},{"location":"01-HowTo/Jekyll%20Garden/#jekyll-gardengithubio","text":"A Digital Garden Theme for Jekyll. Jekyll Garden lets you create a static HTML version of your markdown notes and publish via Github pages. Made for Obsidian users!","title":"Jekyll Garden.github.io"},{"location":"01-HowTo/Jekyll%20Garden/#jekyll-garden","text":"","title":"Jekyll Garden"},{"location":"01-HowTo/Jekyll%20Garden/#jekyll-garden-is-a-markdown-friendly-theme-lets-you-publish-your-obsidian-vault-or-a-subset-of-it-as-a-jekyll-static-website","text":"Check out the demo , features and how to .","title":"Jekyll Garden is a markdown friendly theme lets you publish your Obsidian vault (or a subset of it) as a Jekyll static website."},{"location":"01-HowTo/Jekyll%20Garden/#install-and-setup","text":"Jekyll garden is a theme over Jekyll that supports Obsidian formats, and few feautures. To install Jekyll to your server or local host, refer these documents . Docker file is also available. Alternatively, you can use Github and Github Pages as your server. It's very simple and almost low-code. Here is how to do it. Step 1 : Sign-In to Github, visit the theme page and click on 'Use this Template' Step 2 : Name the forked repo as yourusername.github.io . My Github username is hfactor, hence it's hfactor.github.io Step 3 : Go to your repo's settings > pages and set the source to your main branch. Step 4 (Optional) : If you have a custom domain, set CNAME .","title":"Install and Setup"},{"location":"01-HowTo/Jekyll%20Garden/#configuring-your-jekyll","text":"Now you have Jekyll setup ready, go to _config.yml and set your configurations. Here you can do the following configurations : URL to set your hostname BASEURL to set your sub path (url/subpath/) Website Heading, Content, Copyright Year + Message Private Link - On hover message What all folders to exclude (Obsidian Template and all) Edit these value via Github, and commit directly to Github, which will refresh the whole setup, and a Jekyll enivorment will be ready. You can visit the page by visiting yourusername.github.io","title":"Configuring Your Jekyll."},{"location":"01-HowTo/Jekyll%20Garden/#syncing-github-with-obsidian","text":"Now you have your online publishing setup ready. It's time to build your local knowledge management using Obsidian. Here are the steps : Step 1: Go to github and clone your repository to your machine. For this, you can use git-commands or install Github for desktop. Step 2: Once you have successfully cloned the repository to your machine, Open the Obsidian app in your machine, and set the folder _notes inside the repository as your vault. This is important, because Jekyll Garden can only fetch and publish notes from _notes folder.","title":"Syncing Github with Obsidian"},{"location":"01-HowTo/Jekyll%20Garden/#frontmatter","text":"For all notes to work properly, we need to have three frontmatter values. Please make sure the front matter is written in between three lines. If you check any .md files in this repo, you will see something this. --- title: Credits feed: hide date: 11-05-2022 permalink: /credits format: list --- Title is the page title. It should be same as that of your Obsidian file title for our Wiki links to work. i.e, if file is credits.md title has to be credits If you want to show the note on the feed, you should set Feed as show . It's an optional value, and the default value is set to hide. (To avoid publishing by mistake) date is used to sort note in feed. permalink is an optional value. Use it to set permanent URLs format:list will change the layout to a list with border, Refer Credits . This is useful for Curated lists (Check my personal library ) or while building MoC.","title":"Frontmatter"},{"location":"01-HowTo/Jekyll%20Garden/#updating-digital-garden","text":"Once you have enough notes, got to the Github Desktop app, commit the changes to main, and push the changes to Github. Github will update the pages! If you want to know my workflow or Obsidian folder structure, check here","title":"Updating Digital Garden"},{"location":"01-HowTo/Jekyll%20Garden/#features","text":"Check Features to know theme features","title":"Features"},{"location":"01-HowTo/Jekyll%20Garden/#credits","text":"Check Credits","title":"Credits"},{"location":"01-HowTo/Jekyll%20Garden/#jekyll-garden-features","text":"","title":"Jekyll Garden Features"},{"location":"01-HowTo/Jekyll%20Garden/#wiki-links-are-auto-converted-to-hyperlinks","text":"The theme will automatically convert wiki links to inline links. Similarly, [text](url) will be converted to external links.","title":"Wiki links are auto-converted to Hyperlinks"},{"location":"01-HowTo/Jekyll%20Garden/#markdown-support","text":"The theme supports all standard markdowns. Have a look at Markdown Rendered to see preview.","title":"Markdown support"},{"location":"01-HowTo/Jekyll%20Garden/#external-links-are-indicated","text":"With link icon next to external links, it's easier to identify internal links and external links","title":"External Links are indicated"},{"location":"01-HowTo/Jekyll%20Garden/#easy-front-matter","text":"Using frontmatter, it's easy to configure notes. The capability includes - feed order baed on date, option to hide notes from feed, list layout and more.","title":"Easy Front-Matter"},{"location":"01-HowTo/Jekyll%20Garden/#introducing-list-layout-for-notes","text":"With simple front matter configuration, you can build a list layout (Check Credits for demo). This is helpful for building manual MoC :)","title":"Introducing List layout for Notes"},{"location":"01-HowTo/Jekyll%20Garden/#static-homepage","text":"Want to have a seperate home page instead of the feed? (Like my personal website ) - You can configure that at _config.yml by change homepage enabled to true.","title":"Static Homepage"},{"location":"01-HowTo/Jekyll%20Garden/#support-subpath","text":"You can install Jekyll garden to a URL path, or a sub path (example.com/digitalgarden). To do that, just configure baseurl at _config.yml","title":"Support Subpath"},{"location":"01-HowTo/Jekyll%20Garden/#private-files-using-gitignore","text":"Not a theme feature, but if you want to publish part of your obsidian, it's easy. Just create two folders inside _notes (Say Public and Private), and use Gitignore to stop syncing your pirvate files with Github!","title":"Private files using .gitignore"},{"location":"01-HowTo/Obsidian%20Publish%20Github%20Pages/","text":"Obsidian Publish Github Pages \u00b6 ( obsidian-publish-mkdocs ) from: https://www.opensourceagenda.com/projects/obsidian-publish-github-pages my url: https://codexmonk.github.io/notes/ (MkDocs template) Would you like to take some of your notes in Obsidian and make it public? This template gives you an easy (and automated) way to publish your Obsidian notes on your Github pages. With this template, you get these out-of-the-box : an awesome website based on Material theme, complete with a search bar (Checkout this template repo published here ) get the Obsidian/Roam style [[wikilinks]] from your vault in your published notes Toggle between light and dark mode Quick start \u00b6 Create a new github repository using this template . Click the green button at the top or use this link . Give a name to your repository. By default your notes will be published at <https://username.github.io/repo-name/> Copy only the main branch while creating the repo from the template Clone the repository you generated into your Obsidian folder/vault. Move your notes that you would like to make public to the repo-name/docs folder. Easiest way to do this would be using drag and drop within Obsidian Commit and push the changes. Github actions will take care of the rest, publishing your notes using MkDocs , with the Material theme . Go to Settings > Pages and select the select the Source as your gh-pages branch. Not working for you? Open an issue and let me know what went wrong. Configuring your website \u00b6 How do I arrange notes as sections and pages? \u00b6 By default, the sections and pages will follow the folder structure within /docs . The folders and sub-folders will show up as sections. Try not to have white spaces in your folder and file names, as these will be converted to HTML links. The webpage heading will be the same as the first-level heading in the markdown note. If you would like to arrange the pages manually, then use the nav option in the mkdocs.yml configuration file at the root of this repo to set custom page navigation. For example, see the setup for the Blue Book at github . Managing each page using nav can become cumbersome as the number of notes increase though! The Materials theme provides multiple options to arrange sections , use navigation tabs , and many other helpful navigation setups","title":"Obsidian Publish Github Pages"},{"location":"01-HowTo/Obsidian%20Publish%20Github%20Pages/#obsidian-publish-github-pages","text":"( obsidian-publish-mkdocs ) from: https://www.opensourceagenda.com/projects/obsidian-publish-github-pages my url: https://codexmonk.github.io/notes/ (MkDocs template) Would you like to take some of your notes in Obsidian and make it public? This template gives you an easy (and automated) way to publish your Obsidian notes on your Github pages. With this template, you get these out-of-the-box : an awesome website based on Material theme, complete with a search bar (Checkout this template repo published here ) get the Obsidian/Roam style [[wikilinks]] from your vault in your published notes Toggle between light and dark mode","title":"Obsidian Publish Github Pages"},{"location":"01-HowTo/Obsidian%20Publish%20Github%20Pages/#quick-start","text":"Create a new github repository using this template . Click the green button at the top or use this link . Give a name to your repository. By default your notes will be published at <https://username.github.io/repo-name/> Copy only the main branch while creating the repo from the template Clone the repository you generated into your Obsidian folder/vault. Move your notes that you would like to make public to the repo-name/docs folder. Easiest way to do this would be using drag and drop within Obsidian Commit and push the changes. Github actions will take care of the rest, publishing your notes using MkDocs , with the Material theme . Go to Settings > Pages and select the select the Source as your gh-pages branch. Not working for you? Open an issue and let me know what went wrong.","title":"Quick start"},{"location":"01-HowTo/Obsidian%20Publish%20Github%20Pages/#configuring-your-website","text":"","title":"Configuring your website"},{"location":"01-HowTo/Obsidian%20Publish%20Github%20Pages/#how-do-i-arrange-notes-as-sections-and-pages","text":"By default, the sections and pages will follow the folder structure within /docs . The folders and sub-folders will show up as sections. Try not to have white spaces in your folder and file names, as these will be converted to HTML links. The webpage heading will be the same as the first-level heading in the markdown note. If you would like to arrange the pages manually, then use the nav option in the mkdocs.yml configuration file at the root of this repo to set custom page navigation. For example, see the setup for the Blue Book at github . Managing each page using nav can become cumbersome as the number of notes increase though! The Materials theme provides multiple options to arrange sections , use navigation tabs , and many other helpful navigation setups","title":"How do I arrange notes as sections and pages?"},{"location":"02-NASA-TLX/MESz-TLX/","text":"MESz-TLX \u00b6 Dimenzi\u00f3k \u00b6 6 dimenzi\u00f3 Jelent\u0151s\u00e9g \u00b6 ezek jelent\u0151s\u00e9ge { \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\", \"description\": \"A simple bar chart with embedded data.\", \"data\": { \"values\": [ {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43}, {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53}, {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52} ] }, \"mark\": \"bar\", \"encoding\": { \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}}, \"y\": {\"field\": \"b\", \"type\": \"quantitative\"} } }","title":"MESz-TLX"},{"location":"02-NASA-TLX/MESz-TLX/#mesz-tlx","text":"","title":"MESz-TLX"},{"location":"02-NASA-TLX/MESz-TLX/#dimenziok","text":"6 dimenzi\u00f3","title":"Dimenzi\u00f3k"},{"location":"02-NASA-TLX/MESz-TLX/#jelentoseg","text":"ezek jelent\u0151s\u00e9ge { \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\", \"description\": \"A simple bar chart with embedded data.\", \"data\": { \"values\": [ {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43}, {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53}, {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52} ] }, \"mark\": \"bar\", \"encoding\": { \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}}, \"y\": {\"field\": \"b\", \"type\": \"quantitative\"} } }","title":"Jelent\u0151s\u00e9g"},{"location":"Features/LaTeX%20Math%20Support/","text":"LaTeX Math Support \u00b6 LaTeX math is supported using MathJax. Inline math looks like \\(f(x) = x^2\\) . The input for this is $f(x) = x^2$ . Use $...$ . For a block of math, use $$...$$ on separate lines $$ F(x) = \\int^a_b \\frac{1}{2}x^4 $$ gives \\[ F(x) = \\int^a_b \\frac{1}{2}x^4 \\]","title":"LaTeX Math Support"},{"location":"Features/LaTeX%20Math%20Support/#latex-math-support","text":"LaTeX math is supported using MathJax. Inline math looks like \\(f(x) = x^2\\) . The input for this is $f(x) = x^2$ . Use $...$ . For a block of math, use $$...$$ on separate lines $$ F(x) = \\int^a_b \\frac{1}{2}x^4 $$ gives \\[ F(x) = \\int^a_b \\frac{1}{2}x^4 \\]","title":"LaTeX Math Support"},{"location":"Features/Mermaid%20Diagrams/","text":"Mermaid diagrams \u00b6 Here's the example from MkDocs Material documentation : graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"Mermaid diagrams"},{"location":"Features/Mermaid%20Diagrams/#mermaid-diagrams","text":"Here's the example from MkDocs Material documentation : graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"Mermaid diagrams"},{"location":"Features/Text%20Formatting/","text":"Text Formatting \u00b6 You can have lists like this first second third Or checklist lists to Get things done Also, get highlights and strikethroughs as above (similar to Obsidian). More formatting options for your webpage here . (but not compatible with Obsidian) Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed facilisis neque urna, ut egestas ante iaculis eget. Praesent tempus nec erat sed blandit. Morbi ullamcorper facilisis mi, ac sagittis sem aliquet eget. Etiam luctus efficitur velit, semper bibendum ipsum tristique vitae. Sed laoreet, dolor ac dictum congue, diam ipsum viverra felis, sit amet scelerisque magna nunc eu eros. Cras id enim eget leo facilisis accumsan. Donec porttitor, dui consequat ultricies dapibus, mauris leo vestibulum eros, quis semper justo elit vel mauris. Vestibulum tincidunt massa sed justo euismod, quis sagittis leo consectetur. Fusce at magna sem. Aliquam lobortis sit amet turpis ut auctor. Nullam sollicitudin sit amet tellus vitae accumsan. Etiam lorem justo, consectetur at risus vitae, congue dapibus metus. Sed sit amet convallis nisl. Etiam et lacus eget risus placerat tristique. Vivamus viverra, nisi ut volutpat dapibus, justo augue bibendum arcu, id fermentum nisl nisl vel ante. Mauris in velit in dolor convallis bibendum non ac augue. Nulla vitae orci justo. Nunc consectetur pellentesque ullamcorper. Praesent semper fermentum felis, ac accumsan enim. In lacus lorem, placerat at augue a, egestas cursus arcu. Curabitur in quam vitae magna eleifend tempus. Quisque ligula dolor, laoreet vel dolor eu, hendrerit sodales urna. Aenean quis varius dui, vitae sollicitudin tortor. Proin vulputate ultrices urna, vitae malesuada tortor. Fusce ut urna cursus arcu facilisis condimentum vel et ex. Nunc sit amet fermentum massa. Nulla aliquam interdum tempor. Sed leo diam, ultrices sit amet pretium sit amet, volutpat eu lectus. Suspendisse ac finibus enim, nec finibus eros. Fusce id dictum ex. Mauris sed dignissim mi. Nunc volutpat risus quis est dictum tincidunt. In eu convallis neque. Ut semper nunc lectus, hendrerit egestas dui porta eu. Aenean vel arcu mi. Curabitur felis magna, sollicitudin auctor pellentesque finibus, egestas at diam. Pellentesque tincidunt euismod dictum. Etiam ultricies, diam at gravida tempus, orci quam tristique nunc, at facilisis diam massa eget nibh. Donec mattis erat quis nisl tempus fringilla. Sed feugiat sapien sollicitudin lorem tempor maximus. Etiam non finibus leo. Suspendisse ac dictum quam. Nullam elementum diam et orci interdum commodo. Nam interdum dictum ipsum a bibendum. Nulla feugiat, libero vitae rhoncus semper, erat nulla bibendum felis, vel finibus est mi ac est. Praesent non ultricies odio. Vestibulum volutpat, leo vel suscipit bibendum, felis nisi gravida enim, non aliquet sapien mi at lorem. Sed sodales tellus felis, vel tincidunt libero ultrices sit amet. Aenean venenatis elit ex, in finibus lorem pretium ut. Sed mattis, justo nec auctor viverra, mauris lectus dignissim urna, et dictum augue dolor eu risus. Vivamus dictum, nisl at sagittis gravida, lectus felis lacinia lectus, vel ultrices neque nunc sit amet ipsum. In finibus, lectus vel consectetur gravida, justo lectus lacinia quam, vitae viverra urna arcu at augue. Proin imperdiet malesuada ornare. Curabitur enim lectus, egestas at ante sed, fermentum maximus metus. Duis venenatis purus tortor, vel vestibulum urna varius egestas. Donec consectetur est ac nunc pharetra, euismod vehicula diam sollicitudin. Donec facilisis magna lobortis, cursus odio ut, pharetra ex. Phasellus convallis purus purus, sit amet ornare lorem ornare ut. Cras lacinia, nibh sit amet faucibus vehicula, leo sapien ultrices justo, fermentum consequat lectus mi a nulla. Aenean venenatis aliquet quam, sit amet varius lectus facilisis in. In urna velit, vestibulum in mattis quis, eleifend porttitor arcu. Generated 5 paragraphs, 541 words, 3607 bytes of Lorem Ipsum","title":"Text Formatting"},{"location":"Features/Text%20Formatting/#text-formatting","text":"You can have lists like this first second third Or checklist lists to Get things done Also, get highlights and strikethroughs as above (similar to Obsidian). More formatting options for your webpage here . (but not compatible with Obsidian) Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed facilisis neque urna, ut egestas ante iaculis eget. Praesent tempus nec erat sed blandit. Morbi ullamcorper facilisis mi, ac sagittis sem aliquet eget. Etiam luctus efficitur velit, semper bibendum ipsum tristique vitae. Sed laoreet, dolor ac dictum congue, diam ipsum viverra felis, sit amet scelerisque magna nunc eu eros. Cras id enim eget leo facilisis accumsan. Donec porttitor, dui consequat ultricies dapibus, mauris leo vestibulum eros, quis semper justo elit vel mauris. Vestibulum tincidunt massa sed justo euismod, quis sagittis leo consectetur. Fusce at magna sem. Aliquam lobortis sit amet turpis ut auctor. Nullam sollicitudin sit amet tellus vitae accumsan. Etiam lorem justo, consectetur at risus vitae, congue dapibus metus. Sed sit amet convallis nisl. Etiam et lacus eget risus placerat tristique. Vivamus viverra, nisi ut volutpat dapibus, justo augue bibendum arcu, id fermentum nisl nisl vel ante. Mauris in velit in dolor convallis bibendum non ac augue. Nulla vitae orci justo. Nunc consectetur pellentesque ullamcorper. Praesent semper fermentum felis, ac accumsan enim. In lacus lorem, placerat at augue a, egestas cursus arcu. Curabitur in quam vitae magna eleifend tempus. Quisque ligula dolor, laoreet vel dolor eu, hendrerit sodales urna. Aenean quis varius dui, vitae sollicitudin tortor. Proin vulputate ultrices urna, vitae malesuada tortor. Fusce ut urna cursus arcu facilisis condimentum vel et ex. Nunc sit amet fermentum massa. Nulla aliquam interdum tempor. Sed leo diam, ultrices sit amet pretium sit amet, volutpat eu lectus. Suspendisse ac finibus enim, nec finibus eros. Fusce id dictum ex. Mauris sed dignissim mi. Nunc volutpat risus quis est dictum tincidunt. In eu convallis neque. Ut semper nunc lectus, hendrerit egestas dui porta eu. Aenean vel arcu mi. Curabitur felis magna, sollicitudin auctor pellentesque finibus, egestas at diam. Pellentesque tincidunt euismod dictum. Etiam ultricies, diam at gravida tempus, orci quam tristique nunc, at facilisis diam massa eget nibh. Donec mattis erat quis nisl tempus fringilla. Sed feugiat sapien sollicitudin lorem tempor maximus. Etiam non finibus leo. Suspendisse ac dictum quam. Nullam elementum diam et orci interdum commodo. Nam interdum dictum ipsum a bibendum. Nulla feugiat, libero vitae rhoncus semper, erat nulla bibendum felis, vel finibus est mi ac est. Praesent non ultricies odio. Vestibulum volutpat, leo vel suscipit bibendum, felis nisi gravida enim, non aliquet sapien mi at lorem. Sed sodales tellus felis, vel tincidunt libero ultrices sit amet. Aenean venenatis elit ex, in finibus lorem pretium ut. Sed mattis, justo nec auctor viverra, mauris lectus dignissim urna, et dictum augue dolor eu risus. Vivamus dictum, nisl at sagittis gravida, lectus felis lacinia lectus, vel ultrices neque nunc sit amet ipsum. In finibus, lectus vel consectetur gravida, justo lectus lacinia quam, vitae viverra urna arcu at augue. Proin imperdiet malesuada ornare. Curabitur enim lectus, egestas at ante sed, fermentum maximus metus. Duis venenatis purus tortor, vel vestibulum urna varius egestas. Donec consectetur est ac nunc pharetra, euismod vehicula diam sollicitudin. Donec facilisis magna lobortis, cursus odio ut, pharetra ex. Phasellus convallis purus purus, sit amet ornare lorem ornare ut. Cras lacinia, nibh sit amet faucibus vehicula, leo sapien ultrices justo, fermentum consequat lectus mi a nulla. Aenean venenatis aliquet quam, sit amet varius lectus facilisis in. In urna velit, vestibulum in mattis quis, eleifend porttitor arcu. Generated 5 paragraphs, 541 words, 3607 bytes of Lorem Ipsum","title":"Text Formatting"},{"location":"Topic%201/Note%201/","text":"Note 1 \u00b6 Example: link to Mermaid Diagrams under Features","title":"Note 1"},{"location":"Topic%201/Note%201/#note-1","text":"Example: link to Mermaid Diagrams under Features","title":"Note 1"},{"location":"Topic%201/Note%202/","text":"Note 2 \u00b6","title":"Note 2"},{"location":"Topic%201/Note%202/#note-2","text":"","title":"Note 2"}]}